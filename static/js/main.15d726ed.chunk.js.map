{"version":3,"sources":["Utils.ts","Components/AddTaskPanel/NewTask.tsx","images/delete.png","Components/Task/Task.tsx","Components/Card/Card.tsx","Components/Providers/BooleanInputProvider/ConfirmProvider.tsx","Components/Providers/StringProvider/InputProvider.tsx","redux/actions/Actions.ts","redux/actions/BooleanStatesAction.ts","App.tsx","redux/actions/CounterAction.ts","redux/actions/ListAction.ts","redux/reducers/CounterReducer.ts","redux/reducers/BooleanReducers.ts","redux/reducers/RootReducer.ts","redux/reducers/ListReducer.ts","index.tsx"],"names":["Priority","NewTask","event","cancel","add","xPos","yPos","clientX","clientY","useState","inputValue","setInputValue","className","onClick","isAddingNewTask","style","left","top","e","stopPropagation","autoFocus","onChange","currentTarget","value","Task","id","title","isDone","onRemove","onCheck","onUncheck","onChangePriority","NORMAL","priority","setPriority","textDecoration","newPriority","HIGH","HIGHEST","LOWEST","LOW","src","deleteIcon","Card","onDelete","tasks","setTasks","allTasks","setAllTasks","taskID","setTaskID","runTimeTitle","setRuntimeTitle","length","inputWidth","setInputWidth","newTaskStae","setNewTaskState","inputRef","useRef","onCheckTask","newArr","reduce","acc","current","sortTasks","onUncheckTask","onRemoveTask","prev","sort","a","b","width","ref","newValue","replace","map","task","task_title","ConfirmProvider","text","yes","no","InputProvider","addList","onSubmit","preventDefault","undefined","target","inputOnChange","type","ADD_LIST","REMOVE_LIST","INCREASE_COUNT","DECREASE_COUNT","SET_TEMP_ID","SHOW_DIALOG","SHOW_INPUT","ShowDialog","ShowInput","App","List","useSelector","state","CardsList","CardID","Counters","currentCardId","tempID","showDialog","Booleans","showInput","dispatch","useDispatch","confirmRemoving","removeCard","card","cardTitle","initState","RootReducer","combineReducers","action","match","store","createStore","applyMiddleware","createLogger","ReactDOM","render","document","getElementById"],"mappings":"sPAAYA,E,sDAAAA,O,mBAAAA,I,aAAAA,I,mBAAAA,I,eAAAA,I,sBAAAA,M,WAGL,I,OC6BQC,EAvBgC,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,OAAOC,EAAS,EAATA,IACvDC,EAAO,EACPC,EAAO,EACRJ,IACCG,EAAI,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAOK,QACdD,EAAI,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAOM,SALkD,MAQhCC,mBAAS,IARuB,mBAQ7DC,EAR6D,KAQjDC,EARiD,KAUpE,OACA,qBAAKC,UAAU,qBAAqBC,QAAS,kBAAIV,EAAO,CAACW,iBAAgB,EAAMZ,MAAM,QAArF,SACI,sBAAKU,UAAU,WAAWG,MAAO,CAACC,KAAKX,EAAMY,IAAIX,GAAOO,QAAS,SAACK,GAAD,OAAKA,EAAEC,mBAAxE,UACI,0CACA,uBAAOP,UAAU,iBAAiBQ,WAAS,EAACC,SAAU,SAAAH,GAAC,OAAIP,EAAcO,EAAEI,cAAcC,UACzF,sBAAKX,UAAU,gBAAf,UACK,wBAAQA,UAAU,+BAA+BC,QAAS,kBAAIV,EAAO,CAACW,iBAAgB,EAAMZ,MAAM,QAAlG,oBACA,wBAAQU,UAAU,4BAA4BC,QAAS,kBAAMT,EAAIM,IAAjE,0BC1BF,MAA0B,mCC2D1Bc,G,MApCoB,SAAC,GAAyE,IAAxEC,EAAuE,EAAvEA,GAAIC,EAAmE,EAAnEA,MAAOC,EAA4D,EAA5DA,OAAQC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,iBAAsB,EAExEtB,mBAAmBT,EAASgC,QAF4C,mBAEjGC,EAFiG,KAEvFC,EAFuF,KAsBxG,OACI,sBAAKtB,UAAS,iBAAd,UACI,sBAAKA,UAAS,UAAKe,EAAO,YAAY,IAAtC,UACI,mBAAGf,UAAU,0BAA0BC,QAAS,kBAAMc,EAASG,EAAUL,GAAMI,EAAQJ,IACvFV,MAAO,CAACoB,eAAeR,EAAO,eAAe,QAD7C,SAEKD,IAEL,mBAAGd,UAAS,qCAAgCZ,EAASiC,IAAapB,QAzBvD,WACnB,IAAIuB,EAAcpC,EAASgC,OAC3B,OAAQC,GACJ,KAAKjC,EAASgC,OAASI,EAAcpC,EAASqC,KAC9C,MACA,KAAKrC,EAASqC,KAAOD,EAAcpC,EAASsC,QAC5C,MACA,KAAKtC,EAASsC,QAAUF,EAAcpC,EAASuC,OAC/C,MACA,KAAKvC,EAASuC,OAASH,EAAcpC,EAASwC,IAC9C,MACA,KAAKxC,EAASwC,IAAMJ,EAAcpC,EAASgC,OAG/CD,EAAiBN,EAAIW,GACrBF,EAAYE,IAUJ,SAA4FpC,EAASiC,QAEzG,qBAAKrB,UAAU,kBAAkB6B,IAAKC,EAAY7B,QAAS,kBAAIe,EAASH,WC2CrEkB,G,MA9EmB,SAAC,GAA2B,IAA1BjB,EAAyB,EAAzBA,MAAWkB,GAAc,EAAlBnB,GAAkB,EAAdmB,UAAc,EAE/BnC,mBAAS,IAFsB,mBAElDoC,EAFkD,KAE3CC,EAF2C,OAGzBrC,mBAAS,GAHgB,mBAGlDsC,EAHkD,KAGxCC,EAHwC,OAIjBvC,mBAAS,GAJQ,gCAK7BA,mBAAS,IALoB,mBAKlDwC,EALkD,KAK1CC,EAL0C,OAMjBzC,mBAA6BiB,GANZ,mBAMlDyB,EANkD,KAMpCC,EANoC,OAOrB3C,mBAAwB,GAAfiB,EAAM2B,QAPM,mBAOlDC,EAPkD,KAOtCC,EAPsC,OASlB9C,mBAAsB,CAACK,iBAAgB,EAAMZ,MAAM,OATjC,mBASlDsD,EATkD,KASrCC,EATqC,KAYnDC,EAAWC,iBAAyB,MAiBpCC,EAAc,SAACnC,GACjB,IAAMoC,EAAShB,EAAMiB,QAAO,SAACC,EAAIC,GAAL,OAAiBA,EAAQvC,KAAOA,EAAf,sBAAwBsC,GAAxB,4BAAgCC,GAAhC,IAAwCrC,QAAO,MAA/C,sBAA4DoC,GAA5D,CAAgEC,MAAU,IACvHlB,EAASmB,EAAUJ,KAEjBK,EAAgB,SAACzC,GACnB,IAAMoC,EAAShB,EAAMiB,QAAO,SAACC,EAAIC,GAAL,OAAiBA,EAAQvC,KAAOA,EAAf,sBAAwBsC,GAAxB,4BAAgCC,GAAhC,IAAwCrC,QAAO,MAA/C,sBAA6DoC,GAA7D,CAAiEC,MAAU,IACxHlB,EAASmB,EAAUJ,KAGjBM,EAAe,SAAC1C,GAClBqB,GAAS,SAAAsB,GAAI,OAAIA,EAAKN,QAAO,SAACC,EAAIC,GAAL,OAAiBA,EAAQvC,KAAOA,EAAKsC,EAApB,sBAA8BA,GAA9B,CAAmCC,MAAU,QAGzFjC,EAAmB,SAACN,EAAWQ,GACjC,IAAM4B,EAAShB,EAAMiB,QAAO,SAACC,EAAKC,GAC9B,OAAGA,EAAQvC,KAAOA,EACR,GAAN,mBAAWsC,GAAX,4BAAoBC,GAApB,IAA6B/B,SAASA,MACrC,sBAAW8B,GAAX,CAAgBC,MACtB,IACHlB,EAASmB,EAAUJ,KAEjBI,EAAY,SAACJ,GAGf,OAFeA,EAAOQ,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAErC,SAAWsC,EAAEtC,SAAW,KAC5BoC,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAE3C,QAAU4C,EAAE5C,OAAS,EAAI2C,EAAE3C,OAAS,GAAK,MAI/F,OACI,sBAAKf,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,UACI,uBAAOA,UAAU,aAAaG,MAAO,CAACyD,MAAMlB,GAAamB,IAAKf,EAAUnC,MAAO4B,EAAc9B,SA7CnF,WAAO,IAAD,EAClBqD,EAAQ,UAAGhB,EAASM,eAAZ,aAAG,EAAkBzC,MAAMoD,QAAQ,IAAI,IAClDD,IAAoB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUrB,QAAS,KAClCD,EAAgBsB,GAChBnB,EAAcmB,EAA2B,GAAhBA,EAASrB,OAAY,QA0CtC,wBAAQzC,UAAU,cAAcC,QAAS+B,EAAzC,uBAGHC,EAAM+B,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAMnD,MAAOmD,EAAKnD,MACZD,GAAIoD,EAAKpD,GAETE,OAAQkD,EAAKlD,OACbC,SAAUuC,EACVtC,QAAS+B,EACT9B,UAAWoC,EACXnC,iBAAkBA,GALb8C,EAAKpD,OAOnC,wBAAQb,UAAU,WAAWC,QAAS,SAACK,GAAD,OAAOuC,EAAgB,CAAC3C,iBAAgB,EAAKZ,MAAMgB,KAAzF,sBACCsC,EAAY1C,iBAAmB,cAAC,EAAD,CAASZ,MAAOsD,EAAYtD,MAAOC,OAAQsD,EAAiBrD,IAnDlF,SAAC0E,GACfhC,EAAS,GAAD,mBAAKD,GAAL,CAAW,CAACnB,MAAMoD,EAAYrD,GAAGwB,EAAQtB,QAAO,EAAMM,SAASjC,EAASgC,WAChFyB,EAAgB,CAAC3C,iBAAgB,EAAMZ,MAAM,OAC7C8C,EAAYD,EAAW,GACvBG,EAAUD,EAAS,WCxBZ8B,G,YAbyC,SAAC,GAAyB,IAAxBrD,EAAuB,EAAvBA,MAAMsD,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,IAAIC,EAAQ,EAARA,GACrE,OACQ,sBAAKtE,UAAU,oBAAf,UACI,oBAAIA,UAAU,gBAAd,SAA+Bc,IAC/B,mBAAGd,UAAU,eAAb,SAA6BoE,IAC7B,sBAAKpE,UAAU,kBAAf,UACI,wBAAQC,QAASoE,EAAKrE,UAAU,sBAAhC,iBACA,wBAAQC,QAASqE,EAAItE,UAAU,qBAA/B,wBCYLuE,G,MApBqC,SAAC,GAAoB,IAAnBH,EAAkB,EAAlBA,KAAKI,EAAa,EAAbA,QAAa,EAChC3E,mBAA6B,IADG,mBAC7DC,EAD6D,KACjDC,EADiD,KASpE,OACI,qBAAKC,UAAU,kBAAf,SACI,uBAAMA,UAAU,iBAAiByE,SAAU,SAACnF,GAAYA,EAAMoF,iBACNF,OAAqBG,IAAb7E,EAAuB,GAAGA,IAD1F,UAEI,oBAAIE,UAAU,aAAd,SAA4BoE,IAC5B,uBAAO5D,WAAS,EAACG,MAAOb,EAAYE,UAAU,cAAcS,SAAU,SAACH,GAAD,OAX5D,SAAChB,GACnB,IAAMwE,EAAWxE,EAAMsF,OAAOjE,MAC3BmD,IAAoB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUrB,QAAS,IAClC1C,EAAc+D,GAQuEe,CAAcvE,MAC3F,wBAAQwE,KAAK,SAAS9E,UAAU,eAAhC,uBCtBH+E,EAAW,WACXC,EAAc,cAIdC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAc,cAEdC,EAAc,cACdC,EAAa,a,WCJbC,EAAa,SAAC3E,GAAD,MAAsB,CAC5CmE,KAAOM,EACPzE,UAGS4E,EAAY,SAAC5E,GAAD,MAAsB,CAC3CmE,KAAOO,EACP1E,UC4CW6E,EArCH,WAER,IAAMC,EAAOC,aAAkC,SAAAC,GAAK,OAAIA,EAAMC,aACxDC,EAASH,aAA8B,SAAAC,GAAK,OAAIA,EAAMG,SAASC,iBAC/DC,EAASN,aAA8B,SAAAC,GAAK,OAAIA,EAAMG,SAASE,UAC/DC,EAAaP,aAA+B,SAAAC,GAAK,OAAIA,EAAMO,SAASD,cACpEE,EAAYT,aAA+B,SAAAC,GAAK,OAAIA,EAAMO,SAASC,aAEnEC,EAAWC,cAOXC,EAAkB,SAACzF,GACrBuF,EAASd,GAAW,IACpBc,ECzBsC,CAC1CtB,KAAOK,EACPxE,MDuBuBE,KAEjB0F,EAAY,SAAC1F,GAAD,OACduF,EE5BG,CACHtB,KAAOE,EACPwB,KF0BoB,CAAC1F,MAAM,GAAGD,GAAGA,MAErC,OACI,sBAAKb,UAAU,YAAf,UACKyF,EAAKzB,KAAI,SAAAwC,GAAI,OAAI,cAAC,EAAD,CAAoB1F,MAAO0F,EAAK1F,MAAOD,GAAI2F,EAAK3F,GAAImB,SAAU,kBAAMsE,EAAgBE,EAAK3F,MAA9E2F,EAAK3F,OAClC,wBAAQb,UAAU,kBAAkBC,QAAS,kBAAImG,EAASb,GAAU,KAApE,0BACCU,GAAc,cAAC,EAAD,CACCnF,MAAM,gBACNsD,KAAK,iBACLC,IAAK,WAAOkC,EAAWP,GACXI,EAASd,GAAW,KAChChB,GAAI,WAAQ8B,EAASd,GAAW,OAC/Ca,GAAa,cAAC,EAAD,CAAe/B,KAAK,kBAAkBI,QAtBzC,SAACiC,GAChBL,EAASb,GAAU,IACnBa,EE3BG,CACHtB,KAAOC,EACPyB,KFyBiB,CAAC1F,MAAM2F,EAAW5F,GAAGgF,KACtCO,EC/B0C,CAC9CtB,KAAOG,EACPtE,MD6B2B,W,OGtBzB+F,EAAY,CACdX,cAAe,EACfC,OAAQ,GCLNU,EAAY,CACdT,YAAY,EACZE,WAAW,GCLFQ,EAAcC,YAAgB,CACvCd,SFS0B,WAAqE,IAApEH,EAAmE,uDAAxCe,EAAWG,EAA6B,uCAC9F,OAAOA,EAAO/B,MACV,KAAKG,EACD,OAAO,2BAAIU,GAAX,IAAkBI,cAAgBJ,EAAMI,cAAgBc,EAAOlG,QAEnE,KAAKuE,EACD,OAAO,2BAAIS,GAAX,IAAkBI,cAAgBJ,EAAMI,cAAgBc,EAAOlG,QAEnE,KAAKwE,EACD,OAAO,2BAAIQ,GAAX,IAAkBK,OAAQa,EAAOlG,QAGzC,OAAOgF,GEpBPC,UCEuB,WAAmD,IAAlDD,EAAiD,uDAA5B,GAAIkB,EAAwB,uCACzE,OAAOA,EAAO/B,MACV,KAAKC,EACD,OAAwB,MAArB8B,EAAOL,KAAK1F,OAAiB+F,EAAOL,KAAK1F,MAAMgG,MAAM,WAAkC,IAArBD,EAAOL,KAAK1F,MAAoB6E,EAC/F,GAAN,mBAAWA,GAAX,CAAkB,CAAC7E,MAAM+F,EAAOL,KAAK1F,MAAOD,GAAGgG,EAAOL,KAAK3F,MAC/D,KAAKmE,EACD,OAAOW,EAAMzC,QAAO,SAACC,EAAKC,GAAN,OAAmBA,EAAQvC,KAAOgG,EAAOL,KAAK3F,GAA5B,YAAsCsC,GAAtC,sBAAiDA,GAAjD,CAAqDC,MAAU,IAE7G,OAAOuC,GDTPO,SDI+B,WAAoE,IAAnEP,EAAkE,uDAA1Ce,EAAWG,EAA+B,uCAClG,OAAOA,EAAO/B,MACV,KAAKM,EACD,OAAO,2BAAIO,GAAX,IAAkBM,WAAaY,EAAOlG,QAC1C,KAAK0E,EACD,OAAO,2BAAIM,GAAX,IAAkBQ,UAAYU,EAAOlG,QACzC,QAAU,OAAOgF,M,QGRnBoB,EAAQC,YAAYL,EAAaM,YAAgBC,2BAEvDC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.15d726ed.chunk.js","sourcesContent":["export enum Priority {\r\n    LOWEST = 0, LOW = 1, NORMAL = 2, HIGH = 3, HIGHEST = 4\r\n}\r\nexport const Colors = ['#2ecc71','#f1c40f','#2c3e50','#8e44ad','#fbc531','#eb2f06','#c56cf0']","import React, { useRef, useState } from 'react'\r\nimport { SetStateAction } from 'react'\r\nimport './NewTask.css'\r\n\r\ntype NewTaskWindowProps = {\r\n    event:React.MouseEvent<HTMLButtonElement, MouseEvent> | null, \r\n    cancel : any\r\n    add : (title:string) => void\r\n}\r\nconst NewTask : React.FC<NewTaskWindowProps> = ({event, cancel,add}) => {\r\n    let xPos = 0\r\n    let yPos = 0\r\n    if(event) {\r\n        xPos = event?.clientX\r\n        yPos = event?.clientY\r\n    }\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    return (\r\n    <div className=\"new-task-container\" onClick={()=>cancel({isAddingNewTask:false,event:null})}>\r\n        <div className=\"new-task\" style={{left:xPos, top:yPos}} onClick={(e)=>e.stopPropagation()}>\r\n            <h3>new task</h3>\r\n            <input className=\"new-task-input\" autoFocus onChange={e => setInputValue(e.currentTarget.value)}/>\r\n            <div className=\"new-task-btns\">\r\n                 <button className=\"new-task-cancel new-task-btn\" onClick={()=>cancel({isAddingNewTask:false,event:null})}>Cancel</button>\r\n                 <button className=\"new-task-add new-task-btn\" onClick={() => add(inputValue)}>Add</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default NewTask","export default __webpack_public_path__ + \"static/media/delete.356d50ac.png\";","import React from 'react'\r\nimport { Priority } from '../../Utils'\r\nimport deleteIcon from '../../images/delete.png'\r\nimport { useState } from 'react'\r\nimport './Task.css'\r\n\r\nexport type TaskType = {\r\n    title:string,\r\n    id:number,\r\n    priority:Priority,\r\n    isDone:boolean,\r\n    legendColor?:string\r\n}\r\ntype TaskProps = {\r\n    title:string,\r\n    id:number,\r\n    isDone:boolean,\r\n    onRemove:(id:number)=>void\r\n    onCheck:(id:number)=>void,\r\n    onUncheck:(id:number)=>void,\r\n    onChangePriority:(id:number, priority:Priority)=>void\r\n}\r\n\r\nconst Task : React.FC<TaskProps> = ({id, title, isDone ,onRemove, onCheck, onUncheck, onChangePriority}) => {\r\n\r\n    const [priority, setPriority] = useState<Priority>(Priority.NORMAL)\r\n\r\n    const changePriority = () => {\r\n        let newPriority = Priority.NORMAL\r\n        switch (priority) {\r\n            case Priority.NORMAL : newPriority = Priority.HIGH\r\n            break\r\n            case Priority.HIGH : newPriority = Priority.HIGHEST\r\n            break\r\n            case Priority.HIGHEST : newPriority = Priority.LOWEST\r\n            break\r\n            case Priority.LOWEST : newPriority = Priority.LOW\r\n            break\r\n            case Priority.LOW : newPriority = Priority.NORMAL\r\n            break\r\n        }\r\n        onChangePriority(id, newPriority)\r\n        setPriority(newPriority)\r\n    }\r\n\r\n    return (\r\n        <div className={`task-container`}>\r\n            <div className={`${isDone?'task-done':''}`}>\r\n                <p className=\"task-title unselectable\" onClick={() => isDone ? onUncheck(id) : onCheck(id)} \r\n                style={{textDecoration:isDone?'line-through':'none'}}>\r\n                    {title}\r\n                </p>\r\n                <p className={`task-priority unselectable ${Priority[priority]}`} onClick={changePriority}>{Priority[priority]}</p>\r\n            </div>\r\n            <img className=\"task-delete-btn\" src={deleteIcon} onClick={()=>onRemove(id)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import React, { useEffect, useRef } from 'react'\r\nimport { useState } from 'react'\r\nimport { Priority } from '../../Utils'\r\nimport NewTask from '../AddTaskPanel/NewTask'\r\nimport Task, {TaskType} from '../Task/Task'\r\nimport './Card.css'\r\n\r\nexport type CardType = {\r\n    title : string,\r\n    id : number,\r\n    onDelete? : () => void,\r\n    tasksCount? : number,\r\n    tasks? : TaskType[]\r\n}\r\ntype NewTaskType = {\r\n    isAddingNewTask:boolean,\r\n    event:React.MouseEvent<HTMLButtonElement, MouseEvent> | null\r\n}\r\n\r\nconst Card : React.FC<CardType> = ({title, id, onDelete}) => {\r\n\r\n    const [tasks, setTasks] = useState([] as TaskType[])\r\n    const [allTasks, setAllTasks] = useState(0)\r\n    const [checkedTasks, setCheckedTasks] = useState(0)\r\n    const [taskID, setTaskID] = useState(0)\r\n    const [runTimeTitle, setRuntimeTitle] = useState<string | undefined>(title)\r\n    const [inputWidth, setInputWidth] = useState(title.length * 15)\r\n\r\n    const [newTaskStae, setNewTaskState] = useState<NewTaskType>({isAddingNewTask:false,event:null})\r\n\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n    const inputOnChange = () => {\r\n        const newValue = inputRef.current?.value.replace(' ','')\r\n        if(newValue && newValue?.length > 13) return\r\n        setRuntimeTitle(newValue)\r\n        setInputWidth(newValue ? newValue.length*15 : 15)\r\n    }\r\n\r\n\r\n    const onAddTask = (task_title:string) => {\r\n        setTasks([...tasks,{title:task_title, id:taskID, isDone:false,priority:Priority.NORMAL}])\r\n        setNewTaskState({isAddingNewTask:false,event:null})\r\n        setAllTasks(allTasks + 1)\r\n        setTaskID(taskID + 1)\r\n    }\r\n\r\n    const onCheckTask = (id:number) => {\r\n        const newArr = tasks.reduce((acc,current) => current.id === id ? [...acc,{...current,isDone:true}] : [...acc,current], [] as TaskType[])\r\n        setTasks(sortTasks(newArr))\r\n    }\r\n    const onUncheckTask = (id:number) => {\r\n        const newArr = tasks.reduce((acc,current) => current.id === id ? [...acc,{...current,isDone:false}] : [...acc,current], [] as TaskType[])\r\n        setTasks(sortTasks(newArr))\r\n       }\r\n    \r\n    const onRemoveTask = (id:number) => {\r\n        setTasks(prev => prev.reduce((acc,current) => current.id === id ? acc : [...acc, current], [] as TaskType[]))\r\n    }\r\n\r\n    const onChangePriority = (id:number, priority:Priority) => {\r\n        const newArr = tasks.reduce((acc, current) => {\r\n            if(current.id === id)\r\n                return [...acc, {...current, priority:priority}]\r\n            else return [...acc, current]\r\n        }, [] as TaskType[]) \r\n        setTasks(sortTasks(newArr))\r\n    }\r\n    const sortTasks = (newArr : TaskType[]) : TaskType[] => {\r\n        const sorted = newArr.sort((a,b) => a.priority - b.priority - 1)\r\n        const checkedSortedTasks = sorted.sort((a,b) => a.isDone && b.isDone ? 0 : a.isDone ? 1 : -1)\r\n        return checkedSortedTasks\r\n    }\r\n\r\n    return (\r\n        <div className='card'>\r\n            <div className='card-header'>\r\n                <input className='card-title' style={{width:inputWidth}} ref={inputRef} value={runTimeTitle} onChange={inputOnChange}/>\r\n                <button className='delete-card' onClick={onDelete}>Delete</button>\r\n            </div>\r\n\r\n            {tasks.map(task => <Task title={task.title} \r\n                                     id={task.id} \r\n                                     key={task.id} \r\n                                     isDone={task.isDone} \r\n                                     onRemove={onRemoveTask}\r\n                                     onCheck={onCheckTask}\r\n                                     onUncheck={onUncheckTask}\r\n                                     onChangePriority={onChangePriority}/>)}\r\n\r\n            <button className='add-task' onClick={(e) => setNewTaskState({isAddingNewTask:true,event:e})}>Add Task</button>\r\n            {newTaskStae.isAddingNewTask && <NewTask event={newTaskStae.event} cancel={setNewTaskState} add={onAddTask}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport './Confirm.css'\r\ntype ConfirmProviderProps = {\r\n    title:string,\r\n    text:string,\r\n    yes: () => void,\r\n    no: () => void\r\n}\r\nconst ConfirmProvider: React.FC<ConfirmProviderProps> = ({title,text,yes,no}) => {\r\n    return (\r\n            <div className='confirm-container'>\r\n                <h3 className='confirm-title'>{title}</h3>\r\n                <p className='confirm-text'>{text}</p>\r\n                <div className='confirm-buttons'>\r\n                    <button onClick={yes} className='yes-btn confirm-btn'>Yes</button>\r\n                    <button onClick={no} className='no-btn confirm-btn'>No</button>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmProvider","import React, { useRef, useState } from 'react'\r\nimport './InputProvider.css'\r\n\r\ntype InputProviderProps = {\r\n    text:string,\r\n    addList:(listName:string)=>void\r\n}\r\nconst InputProvider: React.FC<InputProviderProps> = ({text,addList}) => {\r\n    const [inputValue, setInputValue] = useState<string | undefined>(\"\")\r\n\r\n    const inputOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newValue = event.target.value\r\n        if(newValue && newValue?.length > 13) return\r\n        setInputValue(newValue)\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-container\">\r\n            <form className=\"input-elements\" onSubmit={(event) => { event.preventDefault()\r\n                                                                    addList(inputValue===undefined?\"\":inputValue)}}>\r\n                <h3 className=\"input-text\">{text}</h3>\r\n                <input autoFocus value={inputValue} className=\"input-field\" onChange={(e) => inputOnChange(e)}/>\r\n                <button type=\"submit\" className=\"input-button\">Ok</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default InputProvider","export const ADD_LIST = \"ADD_LIST\"\r\nexport const REMOVE_LIST = \"REMOVE_LIST\"\r\nexport const ADD_TASK = \"ADD_TASK\"\r\nexport const REMOVE_TASK = \"REMOVE_TASK\"\r\n\r\nexport const INCREASE_COUNT = \"INCREASE_COUNT\"\r\nexport const DECREASE_COUNT = \"DECREASE_COUNT\"\r\nexport const SET_TEMP_ID = \"SET_TEMP_ID\"\r\n\r\nexport const SHOW_DIALOG = \"SHOW_DIALOG\"\r\nexport const SHOW_INPUT = \"SHOW_INPUT\"\r\n","import { SHOW_DIALOG, SHOW_INPUT } from \"./Actions\"\r\n\r\nexport type BooleansActionType = {\r\n    type : string,\r\n    value: boolean\r\n} \r\nexport const ShowDialog = (value : boolean) => ({\r\n    type : SHOW_DIALOG,\r\n    value\r\n})\r\n\r\nexport const ShowInput = (value : boolean) => ({\r\n    type : SHOW_INPUT,\r\n    value\r\n})","import React, { useEffect, useState } from 'react'\r\nimport Card, {CardType} from './Components/Card/Card'\r\nimport './App.css'\r\nimport ConfirmProvider from './Components/Providers/BooleanInputProvider/ConfirmProvider'\r\nimport InputProvider from './Components/Providers/StringProvider/InputProvider'\r\n\r\nimport {addList, deleteList} from './redux/actions/ListAction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CountIncrease } from './redux/actions/CounterAction'\r\nimport { ShowDialog, ShowInput } from './redux/actions/BooleanStatesAction'\r\nimport { SetTempID } from './redux/actions/CounterAction'\r\n\r\nexport type AppState = {\r\n    currentCardId : number,\r\n    CardsList : CardType[],\r\n    passedId : number,\r\n    Counters: any\r\n    Booleans: any\r\n}\r\n\r\nconst App = () => {\r\n\r\n    const List = useSelector<AppState, CardType[]>(state => state.CardsList)\r\n    const CardID = useSelector<AppState, number>(state => state.Counters.currentCardId)\r\n    const tempID = useSelector<AppState, number>(state => state.Counters.tempID)\r\n    const showDialog = useSelector<AppState, boolean>(state => state.Booleans.showDialog)\r\n    const showInput = useSelector<AppState, boolean>(state => state.Booleans.showInput)\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const addNewCard = (cardTitle:string) => {\r\n        dispatch(ShowInput(false))\r\n        dispatch(addList({title:cardTitle, id:CardID}))\r\n        dispatch(CountIncrease(1))\r\n    }\r\n    const confirmRemoving = (id : number) => {\r\n        dispatch(ShowDialog(true))\r\n        dispatch(SetTempID(id))\r\n    }\r\n    const removeCard =(id : number) => \r\n        dispatch(deleteList({title:'',id:id}))\r\n    \r\n    return (\r\n        <div className='container'>\r\n            {List.map(card => <Card key={card.id} title={card.title} id={card.id} onDelete={() => confirmRemoving(card.id)}/>)}\r\n            <button className='add-card-button' onClick={()=>dispatch(ShowInput(true))}>Add new card</button>\r\n            {showDialog && <ConfirmProvider\r\n                            title='deleting list' \r\n                            text='are you sure ?'\r\n                            yes={() => {removeCard(tempID)\r\n                                        dispatch(ShowDialog(false))}}\r\n                            no={() => { dispatch(ShowDialog(false))}}/>}\r\n            {showInput && <InputProvider text='enter list name' addList={addNewCard}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import { DECREASE_COUNT, INCREASE_COUNT, SET_TEMP_ID } from \"./Actions\"\r\n\r\nexport const CountIncrease = (value : number) => ({\r\n    type : INCREASE_COUNT,\r\n    value : value\r\n})\r\n\r\nexport const CountDecrease = (value : number) => ({\r\n    type : DECREASE_COUNT,\r\n    value : value\r\n})\r\n\r\nexport const SetTempID = (value : number) => ({\r\n    type : SET_TEMP_ID,\r\n    value\r\n})","import { CardType } from '../../Components/Card/Card'\r\nimport { ADD_LIST, REMOVE_LIST } from './Actions'\r\n\r\n\r\nexport function addList(card : CardType) {\r\n    return {\r\n        type : ADD_LIST,\r\n        card\r\n    }   \r\n}\r\n\r\nexport function deleteList(card : CardType) {\r\n    return {\r\n        type : REMOVE_LIST,\r\n        card\r\n    }\r\n}\r\n\r\n","import { DECREASE_COUNT, INCREASE_COUNT, SET_TEMP_ID } from \"../actions/Actions\"\r\n\r\n\r\ntype CountActionType = {\r\n    type : string,\r\n    value : number\r\n}\r\ntype CounterStateType = {\r\n    currentCardId: number,\r\n    tempID: number\r\n}\r\nconst initState = {\r\n    currentCardId: 0,\r\n    tempID: 0\r\n}\r\nexport const CounterReducer = (state : CounterStateType = initState, action : CountActionType) => {\r\n    switch(action.type) {\r\n        case INCREASE_COUNT :\r\n            return {...state, currentCardId : state.currentCardId + action.value}\r\n\r\n        case DECREASE_COUNT : \r\n            return {...state, currentCardId : state.currentCardId - action.value}\r\n\r\n        case SET_TEMP_ID :\r\n            return {...state, tempID: action.value}\r\n\r\n    }\r\n    return state\r\n}","import { SHOW_DIALOG, SHOW_INPUT } from \"../actions/Actions\"\r\nimport { BooleansActionType } from \"../actions/BooleanStatesAction\"\r\n\r\n\r\ntype BooleansState = {\r\n    showDialog: boolean,\r\n    showInput: boolean\r\n}\r\nconst initState = {\r\n    showDialog: false,\r\n    showInput: false\r\n}\r\nexport const BooleanStateReducer = (state : BooleansState = initState, action: BooleansActionType) => {\r\n    switch(action.type) {\r\n        case SHOW_DIALOG :\r\n            return {...state, showDialog : action.value}\r\n        case SHOW_INPUT :\r\n            return {...state, showInput : action.value}\r\n        default : return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport {CounterReducer} from './CounterReducer'\r\nimport {ListReducer} from './ListReducer'\r\nimport {BooleanStateReducer} from './BooleanReducers'\r\n\r\nexport const RootReducer = combineReducers({\r\n    Counters:CounterReducer,\r\n    CardsList:ListReducer,\r\n    Booleans:BooleanStateReducer\r\n})","import { ADD_LIST, REMOVE_LIST } from \"../actions/Actions\";\r\nimport {AppState} from '../../App'\r\nimport { CardType } from \"../../Components/Card/Card\";\r\n\r\nexport type CardAction = {\r\n    type : string,\r\n    card : CardType\r\n}\r\n\r\nexport const ListReducer = (state : CardType[] = [], action : CardAction) => {\r\n    switch(action.type) {\r\n        case ADD_LIST : \r\n            if(action.card.title == null || action.card.title.match(\"^\\\\s+$\") || action.card.title == '') return state\r\n            return [...state, {title:action.card.title, id:action.card.id}]\r\n        case REMOVE_LIST :\r\n            return state.reduce((acc, current) => (current.id === action.card.id) ? [...acc] : [...acc,current], [] as CardType[])\r\n    }\r\n    return state\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nimport {RootReducer} from './redux/reducers/RootReducer'\n\nimport {createLogger} from 'redux-logger' \nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\n\nconst store = createStore(RootReducer, applyMiddleware(createLogger()))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}